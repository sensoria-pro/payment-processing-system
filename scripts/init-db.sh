#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
set -e

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
if [ -f .env ]; then
    export $(cat .env | grep -v '^#' | xargs)
fi

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
log_info() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

log_warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

log_step() {
    echo -e "${BLUE}[STEP]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Docker
check_docker() {
    if ! command -v docker &> /dev/null; then
        log_error "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
        exit 1
    fi
    
    if ! docker info &> /dev/null; then
        log_error "Docker –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ Docker –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
        exit 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è golang-migrate
check_migrate() {
    if ! command -v migrate &> /dev/null; then
        log_warn "golang-migrate –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º..."
        go install -tags 'postgres' github.com/golang-migrate/migrate/v4/cmd/migrate@latest
    fi
}

# –ó–∞–ø—É—Å–∫ PostgreSQL –≤ Docker
start_postgres() {
    log_step "–ó–∞–ø—É—Å–∫ PostgreSQL –≤ Docker..."
    
    if ! docker compose ps postgres | grep -q "Up"; then
        docker compose up -d postgres
        log_info "PostgreSQL –∑–∞–ø—É—â–µ–Ω"
        
        # –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
        log_info "–û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ PostgreSQL..."
        until docker compose exec -T postgres pg_isready -U postgres > /dev/null 2>&1; do
            sleep 2
        done
        log_info "PostgreSQL –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ"
    else
        log_info "PostgreSQL —É–∂–µ –∑–∞–ø—É—â–µ–Ω"
    fi
}

# –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
create_database() {
    local db_name=${POSTGRES_DB:-payment_processing_system}
    local db_user=${POSTGRES_USER:-postgres}
    
    log_step "–°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö '$db_name'..."
    
    if docker compose exec -T postgres createdb -U "$db_user" "$db_name" 2>/dev/null; then
        log_info "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö '$db_name' —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ."
    else
        log_warn "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö '$db_name' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å."
    fi
}

# –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π PostgreSQL
apply_postgres_migrations() {
    log_step "–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π PostgreSQL..."
    
    if make migrate-up; then
        log_info "–ú–∏–≥—Ä–∞—Ü–∏–∏ PostgreSQL –ø—Ä–∏–º–µ–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ."
    else
        log_error "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–π PostgreSQL."
        exit 1
    fi
}

# –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π ClickHouse
apply_clickhouse_migrations() {
    log_step "–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π ClickHouse..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—â–µ–Ω –ª–∏ ClickHouse
    if docker compose ps clickhouse | grep -q "Up"; then
        log_info "ClickHouse –∑–∞–ø—É—â–µ–Ω, –ø—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏..."
        
        # –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ clickhouse-migrator
        if docker compose up clickhouse-migrator; then
            log_info "–ú–∏–≥—Ä–∞—Ü–∏–∏ ClickHouse –ø—Ä–∏–º–µ–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ."
        else
            log_warn "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–π ClickHouse."
        fi
    else
        log_warn "ClickHouse –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –≤—Å—é —Å–∏—Å—Ç–µ–º—É: make start-all"
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    log_step "üóÑÔ∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö Payment Gateway"
    echo
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∏
    check_docker
    check_migrate
    
    # –ó–∞–ø—É—Å–∫ PostgreSQL
    start_postgres
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    create_database
    
    # –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π
    apply_postgres_migrations
    apply_clickhouse_migrations
    
    echo
    log_info "‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"
    echo
    echo "üìä –°—Ç–∞—Ç—É—Å:"
    echo "   ‚Ä¢ PostgreSQL: –≥–æ—Ç–æ–≤"
    echo "   ‚Ä¢ ClickHouse: –≥–æ—Ç–æ–≤ (–µ—Å–ª–∏ –∑–∞–ø—É—â–µ–Ω)"
    echo
    echo "üîß –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
    echo "   ‚Ä¢ make migrate-version - –ø–æ–∫–∞–∑–∞—Ç—å –≤–µ—Ä—Å–∏—é –º–∏–≥—Ä–∞—Ü–∏–π"
    echo "   ‚Ä¢ make migrate-status - –ø–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –º–∏–≥—Ä–∞—Ü–∏–π"
    echo "   ‚Ä¢ make health-check - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ —Å–∏—Å—Ç–µ–º—ã"
    echo "   ‚Ä¢ make start-all - –∑–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å—é —Å–∏—Å—Ç–µ–º—É"
}

# –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
main "$@" 